name: Vercel Preview Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  
on:
  push:
    branches-ignore:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.51.1-jammy
    env:
      HOME: /root
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: npm ci
      - name: Setup Test Environment
        run: |
          echo "NODE_ENV=test" >> .env
          echo "NEXT_PUBLIC_DATABASE_URL_STAGING=${{ secrets.STAGING_DATABASE_URL }}" >> .env
          echo "NEXT_PUBLIC_DIRECT_URL_STAGING=${{ secrets.STAGING_DIRECT_URL }}" >> .env
      - name: Setup Prisma
        run: |
          npx prisma generate --schema=prisma/staging.prisma
          npx prisma migrate deploy --schema=prisma/staging.prisma
      - name: Build
        run: npm run build
      - name: Run tests
        run: npm run test
        
  e2e-tests:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.51.1-jammy
    env:
      HOME: /root
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install dependencies
        run: npm ci
      - name: Setup Test Environment
        run: |
          echo "NODE_ENV=test" >> .env
          echo "NEXT_PUBLIC_DATABASE_URL_STAGING=${{ secrets.STAGING_DATABASE_URL }}" >> .env
          echo "NEXT_PUBLIC_DIRECT_URL_STAGING=${{ secrets.STAGING_DIRECT_URL }}" >> .env
          
      - name: Setup Prisma
        run: |
          npx prisma generate --schema=prisma/staging.prisma
          npx prisma migrate deploy --schema=prisma/staging.prisma

      - name: Build Next.js app
        run: npm run build

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Start Next.js app
        run: npm start &

      - name: Run E2E tests Playwright
        run: npm run test:e2e
        
  mock-tests:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.51.1-jammy
    env:
      HOME: /root

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Setup Test Environment
        run: |
          echo "NODE_ENV=test" >> .env
          echo "NEXT_PUBLIC_DATABASE_URL_STAGING=${{ secrets.STAGING_DATABASE_URL }}" >> .env
          echo "NEXT_PUBLIC_DIRECT_URL_STAGING=${{ secrets.STAGING_DIRECT_URL }}" >> .env

      - name: Setup Prisma
        run: |
          npx prisma generate --schema=prisma/staging.prisma
          npx prisma migrate deploy --schema=prisma/staging.prisma

      - name: Build Next.js app
        run: npm run build

      - name: Run tests
        run: npm run test
        
  Deploy-Preview:
    runs-on: ubuntu-latest
    needs: [test, e2e-tests, mock-tests]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Setup Prisma
        run: |
          npx prisma generate --schema=prisma/staging.prisma
          npx prisma migrate deploy --schema=prisma/staging.prisma

      - name: Build
        run: npm run build

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --environment=preview --yes --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifact
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifact
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
